{"name": "Тест добавления и удаления продукта", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'encode'", "trace": "self = <selenium.webdriver.support.event_firing_webdriver.EventFiringWebDriver object at 0x7fcaada09900>\nl_call = 'find'\nl_args = ('css selector', '#menu-catalog', <selenium.webdriver.chrome.webdriver.WebDriver (session=\"50b3035cdf420cc4774c963f5680c777\")>)\nd_call = 'find_element', d_args = ('css selector', '#menu-catalog')\n\n    def _dispatch(self, l_call, l_args, d_call, d_args):\n        getattr(self._listener, \"before_%s\" % l_call)(*l_args)\n        try:\n>           result = getattr(self._driver, d_call)(*d_args)\n\n../venv/lib/python3.10/site-packages/selenium/webdriver/support/event_firing_webdriver.py:180: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"50b3035cdf420cc4774c963f5680c777\")>\nby = 'css selector', value = '#menu-catalog'\n\n    def find_element(self, by=By.ID, value=None) -> WebElement:\n        \"\"\"\n        Find an element given a By strategy and locator.\n    \n        :Usage:\n            ::\n    \n                element = driver.find_element(By.ID, 'foo')\n    \n        :rtype: WebElement\n        \"\"\"\n        if isinstance(by, RelativeBy):\n            elements = self.find_elements(by=by, value=value)\n            if not elements:\n                raise NoSuchElementException(f\"Cannot locate relative element with: {by.root}\")\n            return elements[0]\n    \n        if by == By.ID:\n            by = By.CSS_SELECTOR\n            value = '[id=\"%s\"]' % value\n        elif by == By.TAG_NAME:\n            by = By.CSS_SELECTOR\n        elif by == By.CLASS_NAME:\n            by = By.CSS_SELECTOR\n            value = \".%s\" % value\n        elif by == By.NAME:\n            by = By.CSS_SELECTOR\n            value = '[name=\"%s\"]' % value\n    \n>       return self.execute(Command.FIND_ELEMENT, {\n            'using': by,\n            'value': value})['value']\n\n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:1248: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"50b3035cdf420cc4774c963f5680c777\")>\ndriver_command = 'findElement'\nparams = {'using': 'css selector', 'value': '#menu-catalog'}\n\n    def execute(self, driver_command: str, params: dict = None) -> dict:\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:425: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fcaada08af0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55f420b1e3bf \\\\u003Cunknown>\\\\n#17 0x55f420b38abe \\\\u003Cunknown>\\\\n#18 0x7fa015352e2d \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#menu-catalog\"}\nE         (Session info: chrome=104.0.5112.79)\nE       Stacktrace:\nE       #0 0x55f420ab6403 <unknown>\nE       #1 0x55f4208bc778 <unknown>\nE       #2 0x55f4208f3c87 <unknown>\nE       #3 0x55f4208f3e51 <unknown>\nE       #4 0x55f420926f24 <unknown>\nE       #5 0x55f420911a2d <unknown>\nE       #6 0x55f420924c74 <unknown>\nE       #7 0x55f4209118f3 <unknown>\nE       #8 0x55f4208e70d8 <unknown>\nE       #9 0x55f4208e8205 <unknown>\nE       #10 0x55f420afde3d <unknown>\nE       #11 0x55f420b00db6 <unknown>\nE       #12 0x55f420ae713e <unknown>\nE       #13 0x55f420b019b5 <unknown>\nE       #14 0x55f420adb970 <unknown>\nE       #15 0x55f420b1e228 <unknown>\nE       #16 0x55f420b1e3bf <unknown>\nE       #17 0x55f420b38abe <unknown>\nE       #18 0x7fa015352e2d <unknown>\n\n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:247: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nbrowser = <selenium.webdriver.support.event_firing_webdriver.EventFiringWebDriver object at 0x7fcaada09900>\nbase_url = 'http://192.168.31.204:8081/'\n\n    @pytest.mark.smoke\n    @allure.title(\"Тест добавления и удаления продукта\")\n    @allure.link('http://192.168.31.204:8081/admin/')\n    def test_add_and_delete_product(browser, base_url):\n        adm_page = AdminPage(browser, base_url)\n        adm_page.open_admin_login_page(base_url)\n        adm_page.input_password_user()\n        adm_page.input_name_user()\n        adm_page.click_button_autorization()\n>       adm_page.click_to_button_catalog_tab()\n\ntest_admin_page.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../src/AdminPage.py:55: in click_to_button_catalog_tab\n    self.wait_and_click_element(locator=AdminPage.OPEN_CATALOG_TAB)\n../src/BasePage.py:70: in wait_and_click_element\n    element = self.wait.until(EC.visibility_of_element_located(locator))\n../venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:78: in until\n    value = method(self._driver)\n../venv/lib/python3.10/site-packages/selenium/webdriver/support/expected_conditions.py:125: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n../venv/lib/python3.10/site-packages/selenium/webdriver/support/event_firing_webdriver.py:108: in find_element\n    return self._dispatch(\"find\", (by, value, self._driver), \"find_element\", (by, value))\n../venv/lib/python3.10/site-packages/selenium/webdriver/support/event_firing_webdriver.py:182: in _dispatch\n    self._listener.on_exception(e, self._driver)\n../conftest.py:104: in on_exception\n    driver.save_screenshot(f'logs/screenshots/{driver.session_id}.png')\n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:1346: in save_screenshot\n    return self.get_screenshot_as_file(filename)\n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:1321: in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"50b3035cdf420cc4774c963f5680c777\")>\n\n    def get_screenshot_as_png(self) -> bytes:\n        \"\"\"\n        Gets the screenshot of the current window as a binary data.\n    \n        :Usage:\n            ::\n    \n                driver.get_screenshot_as_png()\n        \"\"\"\n>       return b64decode(self.get_screenshot_as_base64().encode('ascii'))\nE       AttributeError: 'NoneType' object has no attribute 'encode'\n\n../venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:1357: AttributeError"}, "steps": [{"name": "open_admin_login_page", "status": "passed", "parameters": [{"name": "base_url", "value": "'http://192.168.31.204:8081/'"}], "start": 1660421771834, "stop": 1660421772315}, {"name": "input_password_user", "status": "passed", "steps": [{"name": "Ожидать, что  поле для ввода ('css selector', '#input-password') доступно и ввести текст 'bitnami'", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', '#input-password')"}, {"name": "text", "value": "'bitnami'"}], "start": 1660421772315, "stop": 1660421772483}], "start": 1660421772315, "stop": 1660421772483}, {"name": "input_name_user", "status": "passed", "steps": [{"name": "Ожидать, что  поле для ввода ('css selector', '#input-username') доступно и ввести текст 'user'", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', '#input-username')"}, {"name": "text", "value": "'user'"}], "start": 1660421772484, "stop": 1660421772597}], "start": 1660421772483, "stop": 1660421772597}, {"name": "click_button_autorization", "status": "passed", "steps": [{"name": "Найти элемент ('css selector', 'button.btn-primary') переместить к нему курсор и сделать клик по нему", "status": "passed", "parameters": [{"name": "locator", "value": "('css selector', 'button.btn-primary')"}], "start": 1660421772597, "stop": 1660421772622}], "start": 1660421772597, "stop": 1660421772622}, {"name": "click_to_button_catalog_tab", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'encode'\n", "trace": "  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/GoorooG/DevMain/Selenium_otus/src/AdminPage.py\", line 55, in click_to_button_catalog_tab\n    self.wait_and_click_element(locator=AdminPage.OPEN_CATALOG_TAB)\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/GoorooG/DevMain/Selenium_otus/src/BasePage.py\", line 70, in wait_and_click_element\n    element = self.wait.until(EC.visibility_of_element_located(locator))\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 78, in until\n    value = method(self._driver)\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/support/expected_conditions.py\", line 125, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/support/event_firing_webdriver.py\", line 108, in find_element\n    return self._dispatch(\"find\", (by, value, self._driver), \"find_element\", (by, value))\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/support/event_firing_webdriver.py\", line 182, in _dispatch\n    self._listener.on_exception(e, self._driver)\n  File \"/home/GoorooG/DevMain/Selenium_otus/conftest.py\", line 104, in on_exception\n    driver.save_screenshot(f'logs/screenshots/{driver.session_id}.png')\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 1346, in save_screenshot\n    return self.get_screenshot_as_file(filename)\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 1321, in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 1357, in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode('ascii'))\n"}, "steps": [{"name": "Найти элемент ('css selector', '#menu-catalog') переместить к нему курсор и сделать клик по нему", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'encode'\n", "trace": "  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/GoorooG/DevMain/Selenium_otus/src/BasePage.py\", line 70, in wait_and_click_element\n    element = self.wait.until(EC.visibility_of_element_located(locator))\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 78, in until\n    value = method(self._driver)\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/support/expected_conditions.py\", line 125, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/support/event_firing_webdriver.py\", line 108, in find_element\n    return self._dispatch(\"find\", (by, value, self._driver), \"find_element\", (by, value))\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/support/event_firing_webdriver.py\", line 182, in _dispatch\n    self._listener.on_exception(e, self._driver)\n  File \"/home/GoorooG/DevMain/Selenium_otus/conftest.py\", line 104, in on_exception\n    driver.save_screenshot(f'logs/screenshots/{driver.session_id}.png')\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 1346, in save_screenshot\n    return self.get_screenshot_as_file(filename)\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 1321, in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n  File \"/home/GoorooG/DevMain/Selenium_otus/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 1357, in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode('ascii'))\n"}, "parameters": [{"name": "locator", "value": "('css selector', '#menu-catalog')"}], "start": 1660421772622, "stop": 1660421775333}], "start": 1660421772622, "stop": 1660421775341}], "attachments": [{"name": "log", "source": "3fcca4eb-f2e7-47c4-92eb-93add6c6a511-attachment.txt", "type": "text/plain"}], "start": 1660421771834, "stop": 1660421775342, "uuid": "96bb7543-6c37-4db0-b137-a361687712e7", "historyId": "f399b07b8bd926290b33094b4d37a37b", "testCaseId": "e6373f0315e59af1006eafba91856d29", "fullName": "tests.test_admin_page#test_add_and_delete_product", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_admin_page"}, {"name": "host", "value": "MiWiFi-R4AC-srv"}, {"name": "thread", "value": "79352-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_admin_page"}], "links": [{"type": "link", "url": "http://192.168.31.204:8081/admin/", "name": "http://192.168.31.204:8081/admin/"}]}